<Window x:Class="RejestrFaktur.Views.EditInvoiceElementView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RejestrFaktur.Views"
        xmlns:c="clr-namespace:RejestrFaktur.Converters"
        xmlns:v="clr-namespace:RejestrFaktur.Validations"
        mc:Ignorable="d"
        Title="Edycja Elementów Faktury" Height="610" Width="470">
    <Window.Resources>
        <c:StringToFloatingPercentsConverter x:Key="TaxSliderConverter"/>
        <ControlTemplate x:Key="validationTemplate">
            <StackPanel>
                <AdornedElementPlaceholder/>
                <TextBlock Foreground="Red" FontSize="10" Text="{Binding ErrorContent}"/>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="170"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="190"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Label Content="Lp.:" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"/>
            <TextBox Grid.Column="3" Grid.Row="1" VerticalAlignment="Center" Height="30" VerticalContentAlignment="Center" Validation.ErrorTemplate="{StaticResource validationTemplate}" x:Name="itemNumber">
                <TextBox.Text>
                    <Binding Path="ItemNumber" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <v:InvoiceElementNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="Nazwa:" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center"/>
            <TextBox Grid.Column="3" Grid.Row="3" VerticalAlignment="Center" Height="30" Text="{Binding ItemName, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
            <Label Content="Miara:" Grid.Column="1" Grid.Row="5" VerticalAlignment="Center"/>
            <ComboBox Grid.Column="3" Grid.Row="5" Height="30" ItemsSource="{Binding ItemUnits}" VerticalContentAlignment="Center" SelectedIndex="{Binding ItemUnit, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Ilość:" Grid.Column="1" Grid.Row="7" VerticalAlignment="Center"/>
            <TextBox Grid.Column="3" Grid.Row="7" VerticalAlignment="Center" Height="30"  VerticalContentAlignment="Center" Validation.ErrorTemplate="{StaticResource validationTemplate}" x:Name="itemAmount">
                <TextBox.Text>
                    <Binding Path="ItemAmount" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <v:ItemAmountValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Grid.ColumnSpan="2" Content="Cena netto (za jeden przedmiot):" Grid.Column="1" Grid.Row="9" VerticalAlignment="Center"/>
            <TextBox Grid.Column="3" Grid.Row="9" VerticalAlignment="Center" Height="30" VerticalContentAlignment="Center" x:Name="netPrice" Validation.ErrorTemplate="{StaticResource validationTemplate}">
                <TextBox.Text>
                    <Binding Path="ItemNetPrice" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <v:NetPriceValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="Stawka podatku:" Grid.Column="1" Grid.Row="11" VerticalAlignment="Center"/>
            <Label Grid.Column="2" Grid.Row="11" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{Binding ElementName=taxRateSlider, Path=Value, Converter={StaticResource TaxSliderConverter}}"/>
            <StackPanel Orientation="Horizontal" Grid.Column="3" Grid.Row="11">
                <Button Content="-" Width="20" Height="20" Command="{Binding SliderMinusButton}" Cursor="Hand"/>
                <Slider VerticalAlignment="Center" Name="taxRateSlider" Width="145" Height="30" Margin="5 10 0 0" Minimum="0" Maximum="1000" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding ItemTaxRate, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Content="+" Width="20" Height="20" Command="{Binding SliderPlusButton}" Cursor="Hand"/>
            </StackPanel>
            <Button Content="ZAPISZ" Grid.Column="1" Grid.ColumnSpan="3" Margin="50 0" Grid.Row="13" Command="{Binding SaveUpdatesButton}" Cursor="Hand">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=itemAmount}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=itemNumber}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=netPrice}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding ItemName}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ItemAmount}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ItemUnit}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ItemNetPrice}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ItemTaxRate}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ItemNumber}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</Window>
